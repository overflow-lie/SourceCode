/*
 * Copyright 2012 The Netty Project
 *
 * The Netty Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
package hoperun.proxyserver.nettyserver.ssl;

import java.io.ByteArrayInputStream;
import java.io.InputStream;

/**
 * A bogus key store which provides all the required information to create an
 * example SSL connection.
 * 
 * To generate a bogus key store:
 * 
 * <pre>
 * keytool  -genkey -alias securechat -keysize 2048 -validity 36500
 *          -keyalg RSA -dname "CN=securechat"
 *          -keypass secret -storepass secret
 *          -keystore cert.jks
 * </pre>
 */
public final class SecureChatKeyStore {
	private static final short[] DATA = { 0xFE, 0xED, 0xFE, 0xED, 0x00, 0x00,
			0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
			0x0A, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x63, 0x68, 0x61, 0x74,
			0x00, 0x00, 0x01, 0x44, 0x2A, 0x44, 0x0C, 0xB2, 0x00, 0x00, 0x05,
			0x03, 0x30, 0x82, 0x04, 0xFF, 0x30, 0x0E, 0x06, 0x0A, 0x2B, 0x06,
			0x01, 0x04, 0x01, 0x2A, 0x02, 0x11, 0x01, 0x01, 0x05, 0x00, 0x04,
			0x82, 0x04, 0xEB, 0x3A, 0xF4, 0xC8, 0x57, 0x1E, 0x95, 0x79, 0x28,
			0x0F, 0x1F, 0x5D, 0xDD, 0xEE, 0x96, 0xA8, 0xB2, 0x47, 0x36, 0x3E,
			0x3D, 0xA1, 0x7B, 0x45, 0x84, 0x8B, 0xC1, 0x06, 0xD6, 0xEA, 0x44,
			0x12, 0xDC, 0xCC, 0x94, 0xD3, 0x58, 0x73, 0x02, 0xAA, 0x1A, 0xB0,
			0xDE, 0xBA, 0xB2, 0xFC, 0x2F, 0x48, 0x37, 0xA3, 0x5C, 0x38, 0x11,
			0x05, 0xB2, 0x3F, 0xBF, 0x8A, 0xA5, 0x0E, 0x4C, 0x1A, 0x18, 0x22,
			0x8B, 0x9F, 0x97, 0x52, 0xA4, 0xB2, 0x72, 0x3E, 0xF5, 0x18, 0x06,
			0x67, 0xBB, 0x9D, 0x05, 0xFD, 0x5C, 0xBC, 0x0D, 0xD9, 0xA8, 0xE9,
			0xD0, 0x88, 0x9A, 0x22, 0xBF, 0x84, 0xED, 0x59, 0xF2, 0x7C, 0x07,
			0xE9, 0x96, 0xA6, 0xBE, 0x5A, 0x12, 0x43, 0x95, 0x9B, 0xA0, 0xB8,
			0xFA, 0xCE, 0x90, 0x2C, 0x82, 0xFA, 0xE3, 0x20, 0x5B, 0xCF, 0xF8,
			0x8B, 0x67, 0xE2, 0x49, 0xE0, 0x37, 0x45, 0xEA, 0xFE, 0xF5, 0xBF,
			0x84, 0xE5, 0xD9, 0xA0, 0xC4, 0x53, 0xCC, 0xF6, 0x9B, 0x18, 0x60,
			0x56, 0x13, 0x58, 0x6F, 0x1B, 0x22, 0xA0, 0x92, 0x64, 0x0F, 0x0E,
			0x84, 0x82, 0x25, 0x95, 0xE2, 0xC2, 0x3D, 0x7D, 0x5E, 0x37, 0x1A,
			0x01, 0x80, 0x6A, 0x95, 0x59, 0x63, 0x67, 0x13, 0xB6, 0xD3, 0x83,
			0xD9, 0xCA, 0x0A, 0x6D, 0xE1, 0xF5, 0xFF, 0x15, 0x74, 0xEA, 0xA5,
			0xB4, 0x80, 0x8C, 0x6F, 0x27, 0x8A, 0x35, 0xA8, 0x41, 0x8B, 0xC4,
			0xA3, 0xCC, 0x66, 0xAD, 0x48, 0x60, 0x03, 0x83, 0x3C, 0xD6, 0x2C,
			0x20, 0xE8, 0xB7, 0xE0, 0x25, 0xAB, 0x71, 0x3C, 0x09, 0xF8, 0x0A,
			0xFB, 0xAE, 0xF6, 0x6F, 0x95, 0x42, 0xC2, 0x25, 0x23, 0x83, 0x39,
			0xA4, 0x1C, 0xD7, 0x36, 0x6A, 0xEF, 0xFE, 0x67, 0xF7, 0xD8, 0x83,
			0x71, 0x2E, 0x87, 0xA6, 0x7F, 0x64, 0xA9, 0x93, 0xCE, 0x2B, 0xDC,
			0x57, 0xA6, 0xB5, 0x99, 0xA2, 0x58, 0xF2, 0x59, 0xB1, 0x44, 0x50,
			0xC7, 0xDC, 0x43, 0x5D, 0x6B, 0xC5, 0x6A, 0x26, 0x95, 0xA5, 0xED,
			0x72, 0x4D, 0x48, 0x6A, 0xDB, 0xE1, 0x7D, 0x53, 0xBA, 0x1E, 0x7C,
			0x3E, 0xEA, 0x02, 0x81, 0x09, 0x24, 0x71, 0xAA, 0x47, 0x85, 0x4A,
			0xDC, 0x8C, 0x85, 0x7A, 0x88, 0xAF, 0xC4, 0xBA, 0x4D, 0x0B, 0xE9,
			0x79, 0xAC, 0x91, 0x4E, 0xAC, 0x33, 0xCA, 0x7E, 0xF4, 0x04, 0x6F,
			0xBF, 0x83, 0x0E, 0xF4, 0x80, 0x03, 0xEB, 0x83, 0xA0, 0xA5, 0x0D,
			0xD7, 0xD6, 0x2A, 0x99, 0x0C, 0x9B, 0xE6, 0xDB, 0x2A, 0xAD, 0x16,
			0x85, 0x15, 0x3D, 0xFA, 0x07, 0xDA, 0xE3, 0x4A, 0x70, 0x0F, 0x5C,
			0x60, 0x36, 0x21, 0x48, 0x67, 0xC1, 0x7A, 0xCA, 0xF7, 0xE8, 0x5F,
			0x30, 0x94, 0x3C, 0x0B, 0xB6, 0xCB, 0xEF, 0xAA, 0xD6, 0x6F, 0x33,
			0xB4, 0xB1, 0x02, 0x7F, 0x5F, 0xC6, 0x79, 0x88, 0xF7, 0xAF, 0x5C,
			0x73, 0x2D, 0xE7, 0xA2, 0x7D, 0x26, 0xF2, 0xDE, 0xBC, 0xA5, 0xBA,
			0x4D, 0x87, 0x93, 0xC4, 0x27, 0xF0, 0x19, 0x49, 0xF2, 0x33, 0x81,
			0x0B, 0xBC, 0x2A, 0x51, 0xF2, 0xAD, 0x47, 0x28, 0xBA, 0xDD, 0x5F,
			0x9B, 0x1D, 0x3E, 0x2D, 0x54, 0xF6, 0x53, 0x72, 0xE3, 0x6B, 0xFF,
			0xF0, 0x42, 0x3F, 0xF9, 0xFE, 0x62, 0x0D, 0xCF, 0x24, 0x0B, 0x25,
			0x5A, 0xF3, 0xC2, 0x53, 0xF3, 0xF2, 0x24, 0x40, 0x17, 0x6D, 0x93,
			0x06, 0x5B, 0xFD, 0x58, 0x9F, 0xFA, 0x5D, 0x6D, 0x1C, 0xBE, 0xCC,
			0x2F, 0x97, 0x0E, 0x29, 0xE7, 0xBD, 0x08, 0xCB, 0x79, 0x64, 0x47,
			0xD0, 0xE7, 0xF6, 0x3D, 0xDF, 0x54, 0x6D, 0x9B, 0xBE, 0x04, 0x3D,
			0xC1, 0xBD, 0x09, 0x20, 0x5F, 0x98, 0x4B, 0xF3, 0x02, 0x7E, 0xA1,
			0x88, 0x08, 0xC5, 0x16, 0x8E, 0x16, 0xA3, 0x40, 0x7B, 0x5C, 0x67,
			0xC2, 0x95, 0xBC, 0xAF, 0x01, 0x13, 0xD8, 0xDC, 0xF4, 0x13, 0xF8,
			0xBC, 0x5D, 0xD7, 0x5B, 0xC6, 0x1C, 0x6A, 0x4B, 0x04, 0xE8, 0x29,
			0xC2, 0xB7, 0x67, 0xF6, 0x60, 0x1E, 0x14, 0xC6, 0xDE, 0x97, 0xD4,
			0x9E, 0x7E, 0xE7, 0x3E, 0x16, 0x0C, 0xF5, 0x39, 0xB3, 0xB7, 0xC7,
			0x34, 0x98, 0x79, 0x10, 0x14, 0xD0, 0xF1, 0x98, 0x00, 0xD6, 0x75,
			0x52, 0x43, 0xB8, 0xA2, 0xD9, 0xF8, 0x21, 0x9B, 0xC0, 0x0D, 0x75,
			0x51, 0x4D, 0x2D, 0xDB, 0xA2, 0x81, 0xB9, 0xDE, 0x6E, 0xBF, 0x69,
			0xE8, 0xE0, 0xEB, 0x59, 0x72, 0x58, 0x96, 0xAC, 0xB7, 0x15, 0xEB,
			0x37, 0x4C, 0xDA, 0xD9, 0xE7, 0xE7, 0xF2, 0x71, 0xE5, 0x5C, 0x98,
			0x5E, 0xE5, 0x77, 0x4E, 0x30, 0x18, 0xCF, 0xB1, 0x08, 0x3D, 0x8E,
			0xC1, 0xB6, 0x96, 0x01, 0x5E, 0x72, 0x40, 0xEB, 0x34, 0x08, 0x9E,
			0x2F, 0x9D, 0xBF, 0x54, 0x47, 0x2A, 0xBB, 0x7B, 0x22, 0x94, 0x80,
			0xBB, 0xD0, 0x82, 0x75, 0xFE, 0x1C, 0xCC, 0x34, 0xA3, 0xDB, 0x79,
			0x59, 0x40, 0xC3, 0x64, 0x8F, 0xC2, 0xCD, 0x82, 0xBC, 0x89, 0xCC,
			0x66, 0xF8, 0x78, 0x5C, 0xA7, 0x67, 0xC5, 0x62, 0x2B, 0x2E, 0x9D,
			0x18, 0x69, 0x7E, 0xA3, 0x97, 0xF3, 0xFD, 0x33, 0xE0, 0x9C, 0x7F,
			0xFF, 0x10, 0x14, 0x07, 0xE8, 0x35, 0xA4, 0x9F, 0x6D, 0x7E, 0x7D,
			0x15, 0xCA, 0xE9, 0x86, 0x09, 0x40, 0xF3, 0xDD, 0xD5, 0xB4, 0x70,
			0x2B, 0x84, 0x32, 0x20, 0x9B, 0x75, 0x61, 0xD8, 0xE2, 0xB9, 0x83,
			0x91, 0xC7, 0xFD, 0x6F, 0x02, 0xD6, 0x6A, 0x8B, 0x94, 0xEC, 0x77,
			0x84, 0x5B, 0xD0, 0x15, 0xA0, 0x9C, 0x6F, 0x58, 0xD2, 0x89, 0x76,
			0x89, 0x59, 0xDB, 0x3B, 0x4E, 0x30, 0xD3, 0x7E, 0x66, 0x01, 0x68,
			0x09, 0xB8, 0x71, 0x1A, 0x32, 0xAB, 0x7A, 0x16, 0x29, 0x07, 0xF3,
			0x13, 0xD7, 0x03, 0xF7, 0xE8, 0x7B, 0x9B, 0xE4, 0xC5, 0x0C, 0xE5,
			0x0D, 0xCE, 0x33, 0x91, 0x7C, 0xA5, 0x4B, 0x01, 0xD1, 0x16, 0xA3,
			0xFE, 0x4A, 0x54, 0x5A, 0x2A, 0xE8, 0xAE, 0x71, 0x3E, 0x7E, 0xE3,
			0xBB, 0x5C, 0x0D, 0x22, 0x77, 0x5E, 0xD3, 0xD2, 0x64, 0xAB, 0x19,
			0x8A, 0xD2, 0x31, 0x1C, 0xFB, 0x71, 0x9C, 0xBC, 0x69, 0xE4, 0xD8,
			0x5B, 0x58, 0xCF, 0xA7, 0xEC, 0xCE, 0xD2, 0x03, 0xA6, 0x2A, 0x5C,
			0x32, 0x41, 0x2E, 0x5B, 0xC8, 0x75, 0x60, 0xD5, 0x24, 0xE8, 0xA4,
			0x29, 0x30, 0xC3, 0x38, 0x43, 0x62, 0xBB, 0xF9, 0xA4, 0x76, 0x37,
			0x45, 0xB4, 0x4E, 0x63, 0xEC, 0x05, 0x19, 0x6F, 0xCD, 0x6B, 0x28,
			0x34, 0xA8, 0xD2, 0x72, 0xDC, 0x6B, 0xB2, 0xC5, 0x08, 0x81, 0x92,
			0x5D, 0x87, 0x93, 0xF0, 0x49, 0x58, 0x49, 0xFF, 0xD1, 0x63, 0x4C,
			0x74, 0x38, 0x8B, 0xCA, 0xD8, 0x2E, 0xD5, 0x38, 0xBE, 0xA8, 0xF3,
			0x5D, 0xC2, 0xE0, 0xC8, 0x1A, 0xFD, 0xBA, 0xD0, 0x89, 0x12, 0xE2,
			0x89, 0xEC, 0x3C, 0x57, 0xC9, 0x8F, 0xC9, 0x64, 0xE0, 0x51, 0x25,
			0xCD, 0x2B, 0xC6, 0x48, 0x88, 0x4C, 0x2E, 0x31, 0xB1, 0xC3, 0xFD,
			0x2E, 0xD0, 0x90, 0x45, 0xC4, 0xE7, 0x16, 0xE2, 0x29, 0x9F, 0xF9,
			0xF4, 0x1B, 0xFF, 0xDB, 0xBD, 0x8E, 0x1E, 0xE6, 0x85, 0x55, 0x16,
			0x86, 0xC4, 0xFC, 0xD3, 0x03, 0x6F, 0xC3, 0xBF, 0xDD, 0x46, 0xF5,
			0x9C, 0x4C, 0x2C, 0x07, 0xF1, 0xCB, 0xD9, 0x89, 0x67, 0x50, 0xC0,
			0x9B, 0xD8, 0xEA, 0xBB, 0x61, 0x87, 0x53, 0x32, 0x7E, 0x54, 0x99,
			0x95, 0x93, 0x29, 0x8E, 0xD9, 0xAF, 0xAA, 0xBE, 0xB2, 0xF7, 0x1C,
			0x60, 0xB9, 0xB5, 0x63, 0x3C, 0x6F, 0x96, 0x1F, 0x79, 0x2F, 0x89,
			0xF7, 0xCC, 0x4A, 0x4D, 0x71, 0xB3, 0xF0, 0xDD, 0xF9, 0xAD, 0x0B,
			0x25, 0xCC, 0x5F, 0x6A, 0x60, 0x2B, 0x58, 0x17, 0xD8, 0xA0, 0xF8,
			0xB7, 0x23, 0xC0, 0xED, 0x11, 0x0D, 0xD9, 0xD9, 0x13, 0xC7, 0x0B,
			0xF7, 0xFB, 0x4F, 0x8E, 0xC5, 0xA9, 0x5C, 0xA6, 0x78, 0x6D, 0xAD,
			0x64, 0x0B, 0xFC, 0x3D, 0x67, 0x82, 0x63, 0x8E, 0xA5, 0xDA, 0x49,
			0x81, 0xCB, 0x9A, 0x40, 0xF8, 0xF9, 0x97, 0xC1, 0x2E, 0xFE, 0x2C,
			0x53, 0xA3, 0x41, 0x64, 0x47, 0x5B, 0x9C, 0x31, 0x49, 0xB2, 0x2D,
			0x6A, 0x2C, 0x23, 0xF3, 0xBC, 0xE1, 0x10, 0x8F, 0x2D, 0x90, 0x9B,
			0x8A, 0x78, 0x64, 0x5B, 0x53, 0x4A, 0x47, 0x9A, 0x80, 0x1A, 0x4F,
			0x2A, 0xF7, 0xDF, 0xCE, 0x83, 0xDF, 0x02, 0x8B, 0x5F, 0xEA, 0x96,
			0x06, 0x45, 0x20, 0xA6, 0xFD, 0x09, 0x1F, 0x95, 0x31, 0x55, 0x47,
			0x19, 0x69, 0x55, 0xDC, 0x9B, 0x66, 0x0F, 0x36, 0xF9, 0x74, 0x0B,
			0xC7, 0xD9, 0x31, 0xC1, 0xFC, 0x92, 0xD1, 0xB8, 0xC5, 0x86, 0x7A,
			0x37, 0x1C, 0x8D, 0x08, 0x6D, 0xA2, 0xC3, 0x5F, 0x3C, 0xBB, 0x10,
			0x95, 0x3D, 0x31, 0xAE, 0xD4, 0x48, 0x82, 0xD2, 0xF0, 0x51, 0x21,
			0xBB, 0x20, 0x6E, 0x40, 0x0A, 0x0F, 0x32, 0x28, 0xC2, 0x84, 0x69,
			0x7C, 0x19, 0x18, 0x22, 0x99, 0x67, 0x63, 0x86, 0x78, 0x5A, 0x1C,
			0xF6, 0x23, 0x95, 0x11, 0xA5, 0x85, 0xA5, 0xE1, 0x10, 0x1D, 0x13,
			0xB0, 0x87, 0x5D, 0xA6, 0x41, 0x44, 0x87, 0x1F, 0x2C, 0x18, 0x6C,
			0x83, 0x57, 0xDB, 0xE6, 0x80, 0x7C, 0x8B, 0x28, 0x84, 0x8B, 0x6E,
			0xC3, 0xD3, 0xFC, 0x28, 0x03, 0xD7, 0x89, 0x59, 0xBD, 0x78, 0x5C,
			0x3F, 0xCA, 0x6C, 0xCF, 0xBE, 0xBE, 0x98, 0x13, 0xA7, 0x09, 0x4D,
			0xF0, 0x0D, 0x68, 0x24, 0x6F, 0xB2, 0xA7, 0x96, 0x3E, 0x9B, 0x2B,
			0xDD, 0x62, 0x90, 0x6B, 0xB3, 0x28, 0xCB, 0x22, 0x00, 0x00, 0x00,
			0x01, 0x00, 0x05, 0x58, 0x2E, 0x35, 0x30, 0x39, 0x00, 0x00, 0x02,
			0xD9, 0x30, 0x82, 0x02, 0xD5, 0x30, 0x82, 0x01, 0xBD, 0xA0, 0x03,
			0x02, 0x01, 0x02, 0x02, 0x04, 0x2D, 0x08, 0x06, 0x68, 0x30, 0x0D,
			0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x0B,
			0x05, 0x00, 0x30, 0x1A, 0x31, 0x18, 0x30, 0x16, 0x06, 0x03, 0x55,
			0x04, 0x03, 0x13, 0x0F, 0x70, 0x72, 0x6F, 0x78, 0x79, 0x2E, 0x73,
			0x69, 0x72, 0x75, 0x6E, 0x2E, 0x6E, 0x65, 0x74, 0x30, 0x20, 0x17,
			0x0D, 0x31, 0x34, 0x30, 0x32, 0x31, 0x33, 0x30, 0x38, 0x30, 0x31,
			0x34, 0x36, 0x5A, 0x18, 0x0F, 0x32, 0x31, 0x31, 0x34, 0x30, 0x31,
			0x32, 0x30, 0x30, 0x38, 0x30, 0x31, 0x34, 0x36, 0x5A, 0x30, 0x1A,
			0x31, 0x18, 0x30, 0x16, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x0F,
			0x70, 0x72, 0x6F, 0x78, 0x79, 0x2E, 0x73, 0x69, 0x72, 0x75, 0x6E,
			0x2E, 0x6E, 0x65, 0x74, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0D, 0x06,
			0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05,
			0x00, 0x03, 0x82, 0x01, 0x0F, 0x00, 0x30, 0x82, 0x01, 0x0A, 0x02,
			0x82, 0x01, 0x01, 0x00, 0xC1, 0x54, 0x82, 0x57, 0x3D, 0x2D, 0xB2,
			0xA8, 0x20, 0x8F, 0x2C, 0xA8, 0xC4, 0xF5, 0x8B, 0x19, 0xF8, 0xAC,
			0x74, 0x9D, 0x93, 0x90, 0x6C, 0x51, 0x45, 0x37, 0xF3, 0x91, 0x97,
			0xDF, 0x9D, 0x99, 0x27, 0x77, 0x83, 0x23, 0x63, 0x64, 0x09, 0xF3,
			0x7B, 0x93, 0x98, 0x8B, 0xED, 0x2E, 0x6B, 0x8B, 0x63, 0xB0, 0xB0,
			0x82, 0x62, 0x6D, 0x63, 0xF4, 0x5A, 0x51, 0x27, 0x50, 0x6B, 0x9B,
			0xFB, 0xB0, 0x24, 0x58, 0xF5, 0x50, 0x78, 0x60, 0x12, 0x86, 0x27,
			0xCC, 0x9F, 0xFA, 0xD5, 0xD3, 0x4D, 0xA7, 0x4A, 0x14, 0xC0, 0xF7,
			0xF7, 0x6B, 0xE7, 0x73, 0xDE, 0xFD, 0x92, 0xFE, 0x49, 0x06, 0x5F,
			0x0A, 0x9B, 0x0A, 0x0E, 0x6B, 0x6C, 0x86, 0xC7, 0xA9, 0x4F, 0xEC,
			0x7D, 0xEF, 0x01, 0x83, 0xC4, 0x39, 0x47, 0xDB, 0xC1, 0x5E, 0xEC,
			0x91, 0xE3, 0x80, 0x91, 0x86, 0xE2, 0x69, 0xFB, 0x57, 0x97, 0x90,
			0x2C, 0x2E, 0x1C, 0xFD, 0x64, 0xFB, 0xB9, 0x5F, 0x37, 0x27, 0x8D,
			0x97, 0x3B, 0x66, 0x8A, 0xAF, 0x18, 0x44, 0x3D, 0xF4, 0x65, 0xDA,
			0x17, 0xAB, 0x28, 0x58, 0xB7, 0xCD, 0x8D, 0x86, 0xB7, 0xE2, 0xF7,
			0x70, 0x92, 0x76, 0x53, 0x6A, 0x77, 0x53, 0x64, 0x1B, 0x0D, 0xA3,
			0x95, 0xD3, 0x9F, 0x7B, 0x30, 0x56, 0x8D, 0x4A, 0x7C, 0xD8, 0x02,
			0x0D, 0x61, 0xF2, 0xF1, 0x3D, 0x7C, 0xD5, 0x0E, 0xBA, 0x98, 0x32,
			0x87, 0xAB, 0xF7, 0x1D, 0xB6, 0x10, 0x61, 0x02, 0xB5, 0xF4, 0x70,
			0x04, 0x7E, 0xD3, 0xA0, 0x26, 0xA6, 0xD9, 0x71, 0x13, 0x28, 0x7E,
			0x88, 0x1C, 0x72, 0x2E, 0xE2, 0x58, 0xE3, 0x40, 0x89, 0xE1, 0x27,
			0x60, 0xDA, 0x9B, 0xB1, 0x92, 0x63, 0x23, 0xEC, 0xBA, 0x93, 0x20,
			0xF6, 0x2C, 0x35, 0x62, 0x71, 0x04, 0xCF, 0x47, 0x1B, 0x2D, 0x9F,
			0xBF, 0x77, 0xDD, 0xBE, 0x38, 0x2A, 0xC3, 0x02, 0x03, 0x01, 0x00,
			0x01, 0xA3, 0x21, 0x30, 0x1F, 0x30, 0x1D, 0x06, 0x03, 0x55, 0x1D,
			0x0E, 0x04, 0x16, 0x04, 0x14, 0x4D, 0xF5, 0xBF, 0x73, 0x57, 0xA2,
			0x2E, 0xFC, 0x3C, 0xC4, 0x50, 0x54, 0xDE, 0xC3, 0x9F, 0xCE, 0x8B,
			0xE8, 0xCB, 0x6A, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86,
			0xF7, 0x0D, 0x01, 0x01, 0x0B, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01,
			0x00, 0x14, 0x8B, 0xEB, 0x1C, 0x36, 0x3C, 0x95, 0x05, 0x5B, 0xEF,
			0xB3, 0x84, 0xE8, 0x78, 0xFB, 0x6A, 0x04, 0x01, 0x18, 0x97, 0xA1,
			0x45, 0xD8, 0x7F, 0xD1, 0xF4, 0x8A, 0x22, 0x40, 0x0A, 0xC3, 0x6B,
			0x11, 0x74, 0xBD, 0xF1, 0x0C, 0xDC, 0xE0, 0xC0, 0xBF, 0x9D, 0x7A,
			0x5E, 0xB7, 0x88, 0x4A, 0x61, 0xE4, 0x09, 0x90, 0xDB, 0x75, 0xA0,
			0xB0, 0xC3, 0xC7, 0x57, 0x05, 0x84, 0x63, 0xF5, 0x0B, 0xA2, 0x56,
			0xE7, 0x82, 0x09, 0x01, 0x4A, 0xC6, 0xA2, 0x86, 0xD2, 0xD9, 0xD5,
			0xDE, 0x4F, 0x8B, 0x86, 0x0E, 0xD4, 0x0D, 0xE3, 0x9C, 0x32, 0x2D,
			0xA9, 0xB2, 0x20, 0xE6, 0x71, 0x19, 0x6E, 0x40, 0xA4, 0x77, 0x45,
			0x86, 0x73, 0x19, 0xAD, 0xE8, 0x0A, 0xDA, 0xF4, 0x7C, 0x6B, 0xC9,
			0xFB, 0xCA, 0x6F, 0xCC, 0xE4, 0x9F, 0x62, 0xFD, 0x6A, 0x3C, 0x83,
			0xC0, 0x42, 0x0E, 0xC3, 0xC8, 0x47, 0xD7, 0xAF, 0x22, 0x4D, 0x3A,
			0xA9, 0x55, 0xEC, 0x15, 0x23, 0x6F, 0x84, 0xCB, 0x38, 0xF8, 0x57,
			0x32, 0x6E, 0xE1, 0xC1, 0xD7, 0xC9, 0xBB, 0x31, 0x11, 0x4A, 0x36,
			0x4A, 0x64, 0x3F, 0xB5, 0x3C, 0x97, 0x78, 0x3B, 0xF2, 0x36, 0x8C,
			0x8E, 0x63, 0x56, 0xD8, 0xF3, 0x00, 0xE6, 0xD7, 0x7B, 0x74, 0x7E,
			0xDA, 0x85, 0x07, 0xA0, 0x2C, 0x00, 0xDE, 0x7E, 0x70, 0xB1, 0xE9,
			0xB2, 0x95, 0x1F, 0xE0, 0x80, 0xFE, 0x07, 0x7B, 0x03, 0xB3, 0xF7,
			0x8B, 0xAD, 0x50, 0xE5, 0xE2, 0x5E, 0xA3, 0x0B, 0xC2, 0x05, 0x79,
			0x0A, 0x04, 0xA3, 0xD0, 0x3C, 0x72, 0x62, 0xB7, 0xC8, 0x34, 0x3B,
			0x5A, 0x28, 0xF1, 0x77, 0xFB, 0x49, 0xE4, 0xF5, 0xD2, 0xFC, 0x99,
			0x65, 0x2F, 0x4F, 0x4F, 0x3B, 0xEC, 0x6E, 0xFB, 0xB0, 0x58, 0x1E,
			0x06, 0x8C, 0xE8, 0x5D, 0x75, 0xA7, 0xA8, 0x53, 0x25, 0xED, 0xD1,
			0x37, 0x9B, 0x81, 0xDB, 0x03, 0x7C, 0xD6, 0x8F, 0x12, 0x43, 0x86,
			0xB6, 0x7D, 0xC0, 0x6D, 0x85, 0x71, 0x88, 0xDC, 0xE9, 0x07, 0x37,
			0x1D, 0xCD};

	public static InputStream asInputStream() {
		byte[] data = new byte[DATA.length];
		for (int i = 0; i < data.length; i++) {
			data[i] = (byte) DATA[i];
		}
		return new ByteArrayInputStream(data);
	}

	public static char[] getCertificatePassword() {
		return "secret".toCharArray();
	}

	public static char[] getKeyStorePassword() {
		return "secret".toCharArray();
	}

	private SecureChatKeyStore() {
		// Unused
	}
	/**
	 * 使用这个来格式化
	 * @param s
	 */
    public static void main(String s[]){
    	
    	String r = "FEEDFEED000000020000000100000001000A73656375726563686174000001442A440CB200000503308204FF300E060A2B060104012A021101010500048204EB3AF4C8571E9579280F1F5DDDEE96A8B247363E3DA17B45848BC106D6EA4412DCCC94D3587302AA1AB0DEBAB2FC2F4837A35C381105B23FBF8AA50E4C1A18228B9F9752A4B2723EF5180667BB9D05FD5CBC0DD9A8E9D0889A22BF84ED59F27C07E996A6BE5A1243959BA0B8FACE902C82FAE3205BCFF88B67E249E03745EAFEF5BF84E5D9A0C453CCF69B18605613586F1B22A092640F0E84822595E2C23D7D5E371A01806A9559636713B6D383D9CA0A6DE1F5FF1574EAA5B4808C6F278A35A8418BC4A3CC66AD486003833CD62C20E8B7E025AB713C09F80AFBAEF66F9542C225238339A41CD7366AEFFE67F7D883712E87A67F64A993CE2BDC57A6B599A258F259B14450C7DC435D6BC56A2695A5ED724D486ADBE17D53BA1E7C3EEA0281092471AA47854ADC8C857A88AFC4BA4D0BE979AC914EAC33CA7EF4046FBF830EF48003EB83A0A50DD7D62A990C9BE6DB2AAD1685153DFA07DAE34A700F5C6036214867C17ACAF7E85F30943C0BB6CBEFAAD66F33B4B1027F5FC67988F7AF5C732DE7A27D26F2DEBCA5BA4D8793C427F01949F233810BBC2A51F2AD4728BADD5F9B1D3E2D54F65372E36BFFF0423FF9FE620DCF240B255AF3C253F3F22440176D93065BFD589FFA5D6D1CBECC2F970E29E7BD08CB796447D0E7F63DDF546D9BBE043DC1BD09205F984BF3027EA18808C5168E16A3407B5C67C295BCAF0113D8DCF413F8BC5DD75BC61C6A4B04E829C2B767F6601E14C6DE97D49E7EE73E160CF539B3B7C73498791014D0F19800D6755243B8A2D9F8219BC00D75514D2DDBA281B9DE6EBF69E8E0EB59725896ACB715EB374CDAD9E7E7F271E55C985EE5774E3018CFB1083D8EC1B696015E7240EB34089E2F9DBF54472ABB7B229480BBD08275FE1CCC34A3DB795940C3648FC2CD82BC89CC66F8785CA767C5622B2E9D18697EA397F3FD33E09C7FFF101407E835A49F6D7E7D15CAE9860940F3DDD5B4702B8432209B7561D8E2B98391C7FD6F02D66A8B94EC77845BD015A09C6F58D289768959DB3B4E30D37E66016809B8711A32AB7A162907F313D703F7E87B9BE4C50CE50DCE33917CA54B01D116A3FE4A545A2AE8AE713E7EE3BB5C0D22775ED3D264AB198AD2311CFB719CBC69E4D85B58CFA7ECCED203A62A5C32412E5BC87560D524E8A42930C3384362BBF9A4763745B44E63EC05196FCD6B2834A8D272DC6BB2C50881925D8793F0495849FFD1634C74388BCAD82ED538BEA8F35DC2E0C81AFDBAD08912E289EC3C57C98FC964E05125CD2BC648884C2E31B1C3FD2ED09045C4E716E2299FF9F41BFFDBBD8E1EE685551686C4FCD3036FC3BFDD46F59C4C2C07F1CBD9896750C09BD8EABB618753327E54999593298ED9AFAABEB2F71C60B9B5633C6F961F792F89F7CC4A4D71B3F0DDF9AD0B25CC5F6A602B5817D8A0F8B723C0ED110DD9D913C70BF7FB4F8EC5A95CA6786DAD640BFC3D6782638EA5DA4981CB9A40F8F997C12EFE2C53A34164475B9C3149B22D6A2C23F3BCE1108F2D909B8A78645B534A479A801A4F2AF7DFCE83DF028B5FEA96064520A6FD091F95315547196955DC9B660F36F9740BC7D931C1FC92D1B8C5867A371C8D086DA2C35F3CBB10953D31AED44882D2F05121BB206E400A0F3228C284697C19182299676386785A1CF6239511A585A5E1101D13B0875DA64144871F2C186C8357DBE6807C8B28848B6EC3D3FC2803D78959BD785C3FCA6CCFBEBE9813A7094DF00D68246FB2A7963E9B2BDD62906BB328CB22000000010005582E353039000002D9308202D5308201BDA00302010202042D080668300D06092A864886F70D01010B0500301A311830160603550403130F70726F78792E736972756E2E6E65743020170D3134303231333038303134365A180F32313134303132303038303134365A301A311830160603550403130F70726F78792E736972756E2E6E657430820122300D06092A864886F70D01010105000382010F003082010A0282010100C15482573D2DB2A8208F2CA8C4F58B19F8AC749D93906C514537F39197DF9D9927778323636409F37B93988BED2E6B8B63B0B082626D63F45A5127506B9BFBB02458F5507860128627CC9FFAD5D34DA74A14C0F7F76BE773DEFD92FE49065F0A9B0A0E6B6C86C7A94FEC7DEF0183C43947DBC15EEC91E3809186E269FB5797902C2E1CFD64FBB95F37278D973B668AAF18443DF465DA17AB2858B7CD8D86B7E2F7709276536A7753641B0DA395D39F7B30568D4A7CD8020D61F2F13D7CD50EBA983287ABF71DB6106102B5F470047ED3A026A6D97113287E881C722EE258E34089E12760DA9BB1926323ECBA9320F62C35627104CF471B2D9FBF77DDBE382AC30203010001A321301F301D0603551D0E041604144DF5BF7357A22EFC3CC45054DEC39FCE8BE8CB6A300D06092A864886F70D01010B05000382010100148BEB1C363C95055BEFB384E878FB6A04011897A145D87FD1F48A22400AC36B1174BDF10CDCE0C0BF9D7A5EB7884A61E40990DB75A0B0C3C757058463F50BA256E78209014AC6A286D2D9D5DE4F8B860ED40DE39C322DA9B220E671196E40A47745867319ADE80ADAF47C6BC9FBCA6FCCE49F62FD6A3C83C0420EC3C847D7AF224D3AA955EC15236F84CB38F857326EE1C1D7C9BB31114A364A643FB53C97783BF2368C8E6356D8F300E6D77B747EDA8507A02C00DE7E70B1E9B2951FE080FE077B03B3F78BAD50E5E25EA30BC205790A04A3D03C7262B7C8343B5A28F177FB49E4F5D2FC99652F4F4F3BEC6EFBB0581E068CE85D75A7A85325EDD1379B81DB037CD68F124386B67DC06D857188DCE907371DCD";
    	StringBuffer sb = new StringBuffer();
    	
    	for(int i=0;i<r.length();i+=2){
    	sb.append("0x"+r.substring(i, i+2)+" ,");
    	}
    	System.out.println(sb.toString());
    	
    }
}
